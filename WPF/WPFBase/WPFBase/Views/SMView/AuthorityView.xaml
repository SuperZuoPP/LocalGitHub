<UserControl x:Class="WPFBase.Views.SMView.AuthorityView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:local="clr-namespace:WPFBase.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="{StaticResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border Background="White" CornerRadius="5" Margin="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="350"/> 
                    <ColumnDefinition/> 
                </Grid.ColumnDefinitions>
                <CheckBox Content="全选" HorizontalAlignment="Right" VerticalAlignment="Center" 
                          Margin="0,0,20,0"
                          IsChecked="{Binding IsChenkAll}"
                          Command="{Binding CheckAllCmd}"/>
                <ComboBox Grid.Column="1" Style="{StaticResource CommboxMediumStyle}" Width="300" HorizontalAlignment="Left"
                          VerticalAlignment="Center" Margin="10,0" hc:TitleElement.Title="角色"
                          hc:TitleElement.TitlePlacement="Left" ItemsSource="{Binding RoleList}"
                          SelectedValue="{Binding RoleId,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="RoleName" SelectedValuePath="RoleId">
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding LoadRoleRightCmd}"/>
                    </i:EventTrigger>
                </ComboBox>
                <Button Grid.Column="2" Content="保存" Width="60" Style="{StaticResource ButtonWarning}" Background="#996423"
                        BorderThickness="0" Command="{Binding SaveRighCmd}" HorizontalAlignment="Left"/>
            </Grid>
        </Border>

        <TreeView Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="10,10,0,20" 
                  Width="400"
                  ItemsSource="{Binding MenuList}">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsCheck,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                  Margin="3" Command="{Binding CheckItemCmd}"/>
                        <TextBlock Text="{Binding MenuName}" VerticalAlignment="Center"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate> 
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpand,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment,
                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,
                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate/>
                                </Setter.Value>
                            </Setter>
                            
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>
